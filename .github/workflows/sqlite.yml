on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  push:
    branches: ['master']
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

name: sqlite

jobs:
  phpunit:
    name: PHP ${{ matrix.php }}-${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - 8.1
          - 8.2
          - 8.3
          - 8.4

    steps:
      - name: Checkout.
        uses: actions/checkout@v3

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          extensions: pdo, pdo_sqlite
          ini-values: date.timezone='UTC'
          php-version: ${{ matrix.php }}
          tools: composer:v2

      - name: Determine composer cache directory
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache dependencies installed with composer.
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-

      - name: Update composer.
        run: composer self-update

      - name: Remove unused dependencies of DB drivers
        run: composer remove --dev yiisoft/db-mysql yiisoft/db-pgsql yiisoft/db-mssql yiisoft/db-oracle

      - name: Install dependencies with composer.
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run tests with phpunit with code coverage.
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --colors=always --configuration phpunit.xml.dist

      - name: Upload coverage to Codecov.
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml

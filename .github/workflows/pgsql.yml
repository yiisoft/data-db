on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

  push:
    branches: ['master']
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'
      - 'infection.json.dist'
      - 'psalm.xml'

name: pgsql

jobs:
  tests:
    name: PHP ${{ matrix.php }}-pgsql-${{ matrix.pgsql }}

    env:
      extensions: pdo, pdo_pgsql

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - 8.1
          - 8.2
          - 8.3
          - 8.4

        pgsql:
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17

    services:
      postgres:
        image: postgres:${{ matrix.pgsql }}
        env:
          POSTGRES_DB: data-db-test
          POSTGRES_USER: yii
          POSTGRES_PASSWORD: q1w2e3r4
        ports:
          - 5432:5432
        options: --name=postgres --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2

      - name: Determine composer cache directory
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache dependencies installed with composer
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-

      - name: Update composer
        run: composer self-update

      - name: Remove unused dependencies of DB drivers
        run: composer remove --dev yiisoft/db-sqlite yiisoft/db-mysql yiisoft/db-mssql yiisoft/db-oracle

      - name: Install dependencies with composer
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Install Yii Data
        uses: yiisoft/actions/install-packages@master
        with:
          packages: >-
            ['data']

      - name: Run tests with phpunit
        run: vendor/bin/phpunit --testsuite Pgsql --coverage-clover=coverage.xml --colors=always
        env:
          ENVIRONMENT: ci
          YII_PGSQL_DATABASE: data-db-test
          YII_PGSQL_HOST: 127.0.0.1
          YII_PGSQL_PORT: 5432
          YII_PGSQL_USER: yii
          YII_PGSQL_PASSWORD: q1w2e3r4

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
